{
    "version": "2.0",
    "schemas": [
        {
            "name": "Swagger Object",
            "extensible": true,
            "fields": [
                {
                    "name": "swagger",
                    "nameType": "fixed",
                    "required": true,
                    "id": "swaggerSwagger",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. Specifies the Swagger Specification version being used. It can be used by the Swagger UI and other clients to interpret the API listing. The value MUST be \"2.0\"."
                },
                {
                    "name": "info",
                    "nameType": "fixed",
                    "required": true,
                    "id": "swaggerInfo",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Info Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. Provides metadata about the API. The metadata can be used by the clients if needed."
                },
                {
                    "name": "host",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerHost",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). The host does not support path templating."
                },
                {
                    "name": "basePath",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerBasePath",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. The value MUST start with a leading slash (/). The basePath does not support path templating."
                },
                {
                    "name": "schemes",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerSchemes",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The transfer protocol of the API. Values MUST be from the list: \"http\", \"https\", \"ws\", \"wss\". If the schemes is not included, the default scheme to be used is the one used to access the Swagger definition itself."
                },
                {
                    "name": "consumes",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerConsumes",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of MIME types the APIs can consume. This is global to all APIs but can be overridden on specific API calls. Value MUST be as described under Mime Types."
                },
                {
                    "name": "produces",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerProduces",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of MIME types the APIs can produce. This is global to all APIs but can be overridden on specific API calls. Value MUST be as described under Mime Types."
                },
                {
                    "name": "paths",
                    "nameType": "fixed",
                    "required": true,
                    "id": "swaggerPaths",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Paths Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The available paths and operations for the API."
                },
                {
                    "name": "definitions",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerDefinitions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Definitions Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "An object to hold data types produced and consumed by operations."
                },
                {
                    "name": "parameters",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerParameters",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Parameters Definitions Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "An object to hold parameters that can be used across operations. This property does not define global parameters for all operations."
                },
                {
                    "name": "responses",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerResponses",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Responses Definitions Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "An object to hold responses that can be used across operations. This property does not define global responses for all operations."
                },
                {
                    "name": "securityDefinitions",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerSecurityDefinitions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Security Definitions Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Security scheme definitions that can be used across the specification."
                },
                {
                    "name": "security",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerSecurity",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "Security Requirement Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A declaration of which security schemes are applied for the API as a whole. The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements). Individual operations can override this definition."
                },
                {
                    "name": "tags",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerTags",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "Tag Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared. The tags that are not declared may be organized randomly or based on the tools' logic. Each tag name in the list MUST be unique."
                },
                {
                    "name": "externalDocs",
                    "nameType": "fixed",
                    "required": false,
                    "id": "swaggerExternalDocs",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "External Documentation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Additional external documentation."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "swaggerExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Info Object",
            "extensible": true,
            "fields": [
                {
                    "name": "title",
                    "nameType": "fixed",
                    "required": true,
                    "id": "infoTitle",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The title of the application."
                },
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "infoDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A short description of the application. GFM syntax can be used for rich text representation."
                },
                {
                    "name": "termsOfService",
                    "nameType": "fixed",
                    "required": false,
                    "id": "infoTermsOfService",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The Terms of Service for the API."
                },
                {
                    "name": "contact",
                    "nameType": "fixed",
                    "required": false,
                    "id": "infoContact",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Contact Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The contact information for the exposed API."
                },
                {
                    "name": "license",
                    "nameType": "fixed",
                    "required": false,
                    "id": "infoLicense",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "License Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The license information for the exposed API."
                },
                {
                    "name": "version",
                    "nameType": "fixed",
                    "required": false,
                    "id": "infoVersion",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required Provides the version of the application API (not to be confused with the specification version)."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "infoExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Contact Object",
            "extensible": true,
            "fields": [
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": false,
                    "id": "contactName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The identifying name of the contact person/organization."
                },
                {
                    "name": "url",
                    "nameType": "fixed",
                    "required": false,
                    "id": "contactUrl",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The URL pointing to the contact information. MUST be in the format of a URL."
                },
                {
                    "name": "email",
                    "nameType": "fixed",
                    "required": false,
                    "id": "contactEmail",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The email address of the contact person/organization. MUST be in the format of an email address."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "contactExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "License Object",
            "extensible": true,
            "fields": [
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": true,
                    "id": "licenseName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The license name used for the API."
                },
                {
                    "name": "url",
                    "nameType": "fixed",
                    "required": false,
                    "id": "licenseUrl",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A URL to the license used for the API. MUST be in the format of a URL."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "licenseExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Paths Object",
            "extensible": true,
            "fields": [
                {
                    "name": "/{path}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "pathsPath",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Path Item Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A relative path to an individual endpoint. The field name MUST begin with a slash. The path is appended to the basePath in order to construct the full URL. Path templating is allowed."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "pathsExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Path Item Object",
            "extensible": true,
            "fields": [
                {
                    "name": "$ref",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemRef",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows for an external definition of this path item. The referenced structure MUST be in the format of a Path Item Object. If there are conflicts between the referenced definition and this Path Item's definition, the behavior is undefined."
                },
                {
                    "name": "get",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemGet",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a GET operation on this path."
                },
                {
                    "name": "put",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemPut",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a PUT operation on this path."
                },
                {
                    "name": "post",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemPost",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a POST operation on this path."
                },
                {
                    "name": "delete",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemDelete",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a DELETE operation on this path."
                },
                {
                    "name": "options",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemOptions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a OPTIONS operation on this path."
                },
                {
                    "name": "head",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemHead",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a HEAD operation on this path."
                },
                {
                    "name": "patch",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemPatch",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Operation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of a PATCH operation on this path."
                },
                {
                    "name": "parameters",
                    "nameType": "fixed",
                    "required": false,
                    "id": "pathItemParameters",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "Parameter Object",
                            "Reference Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined at the Swagger Object's parameters. There can be one \"body\" parameter at most."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "pathItemExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Operation Object",
            "extensible": true,
            "fields": [
                {
                    "name": "tags",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationTags",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier."
                },
                {
                    "name": "summary",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationSummary",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A short summary of what the operation does. For maximum readability in the swagger-ui, this field SHOULD be less than 120 characters."
                },
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A verbose explanation of the operation behavior. GFM syntax can be used for rich text representation."
                },
                {
                    "name": "externalDocs",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationExternalDocs",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "External Documentation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Additional external documentation for this operation."
                },
                {
                    "name": "operationId",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationId",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions."
                },
                {
                    "name": "consumes",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationConsumes",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of MIME types the operation can consume. This overrides the consumes definition at the Swagger Object. An empty value MAY be used to clear the global definition. Value MUST be as described under Mime Types."
                },
                {
                    "name": "produces",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationProduces",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of MIME types the operation can produce. This overrides the produces definition at the Swagger Object. An empty value MAY be used to clear the global definition. Value MUST be as described under Mime Types."
                },
                {
                    "name": "parameters",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationParameters",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "Parameter Object",
                            "Reference Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of parameters that are applicable for this operation. If a parameter is already defined at the Path Item, the new definition will override it, but can never remove it. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined at the Swagger Object's parameters. There can be one \"body\" parameter at most."
                },
                {
                    "name": "responses",
                    "nameType": "fixed",
                    "required": true,
                    "id": "operationResponses",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Responses Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The list of possible responses as they are returned from executing this operation."
                },
                {
                    "name": "schemes",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationSchemes",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The transfer protocol for the operation. Values MUST be from the list: \"http\", \"https\", \"ws\", \"wss\". The value overrides the Swagger Object schemes definition."
                },
                {
                    "name": "deprecated",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationDeprecated",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Declares this operation to be deprecated. Usage of the declared operation should be refrained. Default value is false."
                },
                {
                    "name": "security",
                    "nameType": "fixed",
                    "required": false,
                    "id": "operationSecurity",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "Security Requirement Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A declaration of which security schemes are applied for this operation. The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements). This definition overrides any declared top-level security. To remove a top-level security declaration, an empty array can be used."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "operationExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "External Documentation Object",
            "extensible": true,
            "fields": [
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "externalDocDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A short description of the target documentation. GFM syntax can be used for rich text representation."
                },
                {
                    "name": "url",
                    "nameType": "fixed",
                    "required": true,
                    "id": "externalDocUrl",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The URL for the target documentation. Value MUST be in the format of a URL."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "externalDocExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Parameter Object",
            "extensible": true,
            "fields": [
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": true,
                    "id": "parameterName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The name of the parameter. Parameter names are case sensitive. If in is \"path\", the name field MUST correspond to the associated path segment from the path field in the Paths Object. See Path Templating for further information.For all other cases, the name corresponds to the parameter name used based on the in property."
                },
                {
                    "name": "in",
                    "nameType": "fixed",
                    "required": true,
                    "id": "parameterIn",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The location of the parameter. Possible values are \"query\", \"header\", \"path\", \"formData\" or \"body\"."
                },
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A brief description of the parameter. This could contain examples of use.  GFM syntax can be used for rich text representation."
                },
                {
                    "name": "required",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterRequired",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Determines whether this parameter is mandatory. If the parameter is in \"path\", this property is required and its value MUST be true. Otherwise, the property MAY be included and its default value is false."
                },
                {
                    "name": "schema",
                    "nameType": "fixed",
                    "required": true,
                    "id": "parameterSchema",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Schema Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The schema defining the type used for the body parameter."
                },
                {
                    "name": "type",
                    "nameType": "fixed",
                    "required": true,
                    "id": "parameterType",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The type of the parameter. Since the parameter is not located at the request body, it is limited to simple types (that is, not an object). The value MUST be one of \"string\", \"number\", \"integer\", \"boolean\", \"array\" or \"file\". If type is \"file\", the consumes MUST be either \"multipart/form-data\", \" application/x-www-form-urlencoded\" or both and the parameter MUST be in \"formData\"."
                },
                {
                    "name": "format",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterFormat",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The extending format for the previously mentioned type. See Data Type Formats for further details."
                },
                {
                    "name": "allowEmptyValue",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterAllowEmptyValue",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Sets the ability to pass empty-valued parameters. This is valid only for either query or formData parameters and allows you to send a parameter with a name only or  an empty value. Default value is false."
                },
                {
                    "name": "items",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Items Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required if type is \"array\". Describes the type of items in the array."
                },
                {
                    "name": "collectionFormat",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterCollectionFormat",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Determines the format of the array if type array is used. Possible values are: csv - comma separated values foo,bar. ssv - space separated values foo bar. tsv - tab separated values foo\\tbar. pipes - pipe separated values foo|bar. multi - corresponds to multiple parameter instances instead of multiple values for a single instance foo=bar&foo=baz. This is valid only for parameters in \"query\" or \"formData\".  Default value is csv."
                },
                {
                    "name": "default",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterDefault",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "*"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Declares the value of the parameter that the server will use if none is provided, for example a \"count\" to control the number of results per page might default to 100 if not supplied by the client in the request. (Note: \"default\" has no meaning for required parameters.)  See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2. Unlike JSON Schema this value MUST conform to the defined type for this parameter."
                },
                {
                    "name": "maximum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMaximum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2."
                },
                {
                    "name": "exclusiveMaximum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterExclusiveMaximum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2."
                },
                {
                    "name": "minimum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMinimum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3."
                },
                {
                    "name": "exclusiveMinimum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterExclusiveMinimum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3."
                },
                {
                    "name": "maxLength",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMaxLength",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.1."
                },
                {
                    "name": "minLength",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMinLength",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.2."
                },
                {
                    "name": "pattern",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterPattern",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3."
                },
                {
                    "name": "maxItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMaxItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.2."
                },
                {
                    "name": "minItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMinItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.3."
                },
                {
                    "name": "uniqueItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterUniqueItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.4."
                },
                {
                    "name": "enum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterEnum",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "*"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1."
                },
                {
                    "name": "multipleOf",
                    "nameType": "fixed",
                    "required": false,
                    "id": "parameterMultipleOf",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.1."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "parameterExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Items Object",
            "extensible": true,
            "fields": [
                {
                    "name": "type",
                    "nameType": "fixed",
                    "required": true,
                    "id": "itemsType",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The internal type of the array. The value MUST be one of \"string\", \"number\", \"integer\", \"boolean\", or \"array\". Files and models are not allowed."
                },
                {
                    "name": "format",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsFormat",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The extending format for the previously mentioned type. See Data Type Formats for further details."
                },
                {
                    "name": "items",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Items Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required if type is \"array\". Describes the type of items in the array."
                },
                {
                    "name": "collectionFormat",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsCollectionFormat",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Determines the format of the array if type array is used. Possible values are: csv - comma separated values foo,bar. ssv - space separated values foo bar. tsv - tab separated values foo\\tbar. pipes - pipe separated values foo|bar.  Default value is csv."
                },
                {
                    "name": "default",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsDefault",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "*"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Declares the value of the item that the server will use if none is provided. (Note: \"default\" has no meaning for required items.) See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2. Unlike JSON Schema this value MUST conform to the defined type for the data type."
                },
                {
                    "name": "maximum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMaximum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2."
                },
                {
                    "name": "exclusiveMaximum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMaximum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.2."
                },
                {
                    "name": "minimum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMinimum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3."
                },
                {
                    "name": "exclusiveMinimum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsExclusiveMinimum",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.3."
                },
                {
                    "name": "maxLength",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMaxLength",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.1."
                },
                {
                    "name": "minLength",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMinLength",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.2."
                },
                {
                    "name": "pattern",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsPattern",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3."
                },
                {
                    "name": "maxItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMaxItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.2."
                },
                {
                    "name": "minItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMinItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "integer"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.3."
                },
                {
                    "name": "uniqueItems",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsUniqueItems",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.3.4."
                },
                {
                    "name": "enum",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsEnum",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "*"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1."
                },
                {
                    "name": "multipleOf",
                    "nameType": "fixed",
                    "required": false,
                    "id": "itemsMultipleOf",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "number"
                        ]
                    },
                    "appliesTo": null,
                    "description": "See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.1.1."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "itemsExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Responses Object",
            "extensible": true,
            "fields": [
                {
                    "name": "default",
                    "nameType": "fixed",
                    "required": false,
                    "id": "responsesDefault",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Response Object",
                            "Reference Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The documentation of responses other than the ones declared for specific HTTP response codes. It can be used to cover undeclared responses. Reference Object can be used to link to a response that is defined at the Swagger Object's responses section."
                },
                {
                    "name": "{HTTP Status Code}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "responsesCode",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Response Object",
                            "Reference Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Any HTTP status code can be used as the property name (one property per HTTP status code). Describes the expected response for that HTTP status code.  Reference Object can be used to link to a response that is defined at the Swagger Object's responses section."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "responsesExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Response Object",
            "extensible": true,
            "fields": [
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": true,
                    "id": "responseDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. A short description of the response. GFM syntax can be used for rich text representation."
                },
                {
                    "name": "schema",
                    "nameType": "fixed",
                    "required": false,
                    "id": "responseSchema",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Schema Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A definition of the response structure. It can be a primitive, an array or an object. If this field does not exist, it means no content is returned as part of the response. As an extension to the Schema Object, its root type value may also be \"file\". This SHOULD be accompanied by a relevant produces mime-type."
                },
                {
                    "name": "headers",
                    "nameType": "fixed",
                    "required": false,
                    "id": "responseHeaders",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Headers Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A list of headers that are sent with the response."
                },
                {
                    "name": "examples",
                    "nameType": "fixed",
                    "required": false,
                    "id": "responseExamples",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Example Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "An example of the response message."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "responseExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Headers Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "headersName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Header Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The name of the property corresponds to the name of the header. The value describes the type of the header."
                }
            ]
        },
        {
            "name": "Example Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{mime type}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "exampleMimeType",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The name of the property MUST be one of the Operation produces values (either implicit or inherited). The value SHOULD be an example of what such a response would look like."
                }
            ]
        },
        {
            "name": "Header Object",
            "extensible": true,
            "fields": [
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "headerExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Tag Object",
            "extensible": true,
            "fields": [
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": true,
                    "id": "tagName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The name of the tag."
                },
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "tagDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A short description for the tag. GFM syntax can be used for rich text representation."
                },
                {
                    "name": "externalDocs",
                    "nameType": "fixed",
                    "required": false,
                    "id": "tagExternalDocs",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "External Documentation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Additional external documentation for this tag."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "tagExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Reference Object",
            "extensible": false,
            "fields": [
                {
                    "name": "$ref",
                    "nameType": "fixed",
                    "required": true,
                    "id": "referenceRef",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Required. The reference string."
                }
            ]
        },
        {
            "name": "Schema Object",
            "extensible": true,
            "fields": [
                {
                    "name": "discriminator",
                    "nameType": "fixed",
                    "required": false,
                    "id": "schemaDiscriminator",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the required property list. When used, the value MUST be the name of this schema or any schema that inherits it."
                },
                {
                    "name": "readOnly",
                    "nameType": "fixed",
                    "required": false,
                    "id": "schemaReadOnly",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Relevant only for Schema \"properties\" definitions. Declares the property as \"read only\". This means that it MAY be sent as part of a response but MUST NOT be sent as part of the request. Properties marked as readOnly being true SHOULD NOT be in the required list of the defined schema. Default value is false."
                },
                {
                    "name": "xml",
                    "nameType": "fixed",
                    "required": false,
                    "id": "schemaXml",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "XML Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "This MAY be used only on properties schemas. It has no effect on root schemas. Adds Additional metadata to describe the XML representation format of this property."
                },
                {
                    "name": "externalDocs",
                    "nameType": "fixed",
                    "required": false,
                    "id": "schemaExternalDocs",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "External Documentation Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Additional external documentation for this schema."
                },
                {
                    "name": "example",
                    "nameType": "fixed",
                    "required": false,
                    "id": "schemaExample",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A free-form property to include an example of an instance for this schema."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "schemaExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "XML Object",
            "extensible": true,
            "fields": [
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": false,
                    "id": "xmlName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Replaces the name of the element/attribute used for the described schema property. When defined within the Items Object (items), it will affect the name of the individual XML elements within the list. When defined alongside type being array (outside the items), it will affect the wrapping element and only if wrapped is true. If wrapped is false, it will be ignored."
                },
                {
                    "name": "namespace",
                    "nameType": "fixed",
                    "required": false,
                    "id": "xmlNamespace",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The URL of the namespace definition. Value SHOULD be in the form of a URL."
                },
                {
                    "name": "prefix",
                    "nameType": "fixed",
                    "required": false,
                    "id": "xmlPrefix",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "The prefix to be used for the name."
                },
                {
                    "name": "attribute",
                    "nameType": "fixed",
                    "required": false,
                    "id": "xmlAttribute",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Declares whether the property definition translates to an attribute instead of an element. Default value is false."
                },
                {
                    "name": "wrapped",
                    "nameType": "fixed",
                    "required": false,
                    "id": "xmlWrapped",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "boolean"
                        ]
                    },
                    "appliesTo": null,
                    "description": "MAY be used only for an array definition. Signifies whether the array is wrapped (for example, <books><book/><book/></books>) or unwrapped (<book/><book/>). Default value is false. The definition takes effect only when defined alongside type being array (outside the items)."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "xmlExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Definitions Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "definitionsName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Schema Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A single definition, mapping a \"name\" to the schema it defines."
                }
            ]
        },
        {
            "name": "Parameters Definitions Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "pdName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Parameter Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A single parameter definition, mapping a \"name\" to the parameter it defines."
                }
            ]
        },
        {
            "name": "Responses Definitions Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "rdName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Response Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A single response definition, mapping a \"name\" to the response it defines."
                }
            ]
        },
        {
            "name": "Security Definitions Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "sdName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Security Scheme Object"
                        ]
                    },
                    "appliesTo": null,
                    "description": "A single security scheme definition, mapping a \"name\" to the scheme it defines."
                }
            ]
        },
        {
            "name": "Security Scheme Object",
            "extensible": true,
            "fields": [
                {
                    "name": "type",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeType",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "Any",
                    "description": "Required. The type of the security scheme. Valid values are \"basic\", \"apiKey\" or \"oauth2\"."
                },
                {
                    "name": "description",
                    "nameType": "fixed",
                    "required": false,
                    "id": "securitySchemeDescription",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "Any",
                    "description": "A short description for security scheme."
                },
                {
                    "name": "name",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "apiKey",
                    "description": "Required. The name of the header or query parameter to be used."
                },
                {
                    "name": "in",
                    "nameType": "fixed",
                    "required": false,
                    "id": "securitySchemeIn",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "apiKey",
                    "description": "Required The location of the API key. Valid values are \"query\" or \"header\"."
                },
                {
                    "name": "flow",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeFlow",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "oauth2",
                    "description": "Required. The flow used by the OAuth2 security scheme. Valid values are \"implicit\", \"password\", \"application\" or \"accessCode\"."
                },
                {
                    "name": "authorizationUrl",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeAuthorizationUrl",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "oauth2 (\"implicit\", \"accessCode\")",
                    "description": "Required. The authorization URL to be used for this flow. This SHOULD be in the form of a URL."
                },
                {
                    "name": "tokenUrl",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeTokenUrl",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": "oauth2 (\"password\", \"application\", \"accessCode\")",
                    "description": "Required. The token URL to be used for this flow. This SHOULD be in the form of a URL."
                },
                {
                    "name": "scopes",
                    "nameType": "fixed",
                    "required": true,
                    "id": "securitySchemeScopes",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Scopes Object"
                        ]
                    },
                    "appliesTo": "oauth2",
                    "description": "Required. The available scopes for the OAuth2 security scheme."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "securitySchemeExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Scopes Object",
            "extensible": true,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "scopesName",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Maps between a name of a scope to a short description of it (as the value of the property)."
                },
                {
                    "name": "^x-",
                    "nameType": "patterned",
                    "required": false,
                    "id": "scopesExtensions",
                    "type": {
                        "listType": null,
                        "mapKeyType": null,
                        "types": [
                            "Any"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Allows extensions to the Swagger Schema. The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. See Vendor Extensions for further details."
                }
            ]
        },
        {
            "name": "Security Requirement Object",
            "extensible": false,
            "fields": [
                {
                    "name": "{name}",
                    "nameType": "patterned",
                    "required": false,
                    "id": "securityRequirementsName",
                    "type": {
                        "listType": "array",
                        "mapKeyType": null,
                        "types": [
                            "string"
                        ]
                    },
                    "appliesTo": null,
                    "description": "Each name must correspond to a security scheme which is declared in the Security Definitions. If the security scheme is of type \"oauth2\", then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty."
                }
            ]
        }
    ]
}